# DDO Data Platform Github workflow for Release pipeline
# Staging Pre-Release to Release (Prod)

name: Release Pipeline

on:
  pull_request_review:
    types: [ submitted ]
    branches: [ main ]

env:
  DBX_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
  DBX_HOST: ${{ secrets.DATABRICKS_HOST }}

jobs:
  pre-release:
    if: github.event.review.state == 'approved'
    runs-on: ubuntu-latest
    environment: 
      name: pre-release
      url: ${{ steps.deploy.outputs.deployment_url }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Deploy to Pre-Release
        id: deploy
        run: |
          dbx bundle deploy \
            --target-env pre-release \
            --bundle-file conf/bundle.yml \
            --storage-path dbfs:/FileStore/shared/pre-release/bundles
            
      - name: Run Regression Tests
        run: |
          dbx bundle run \
            --target-env pre-release \
            --bundle-file conf/bundle.yml \
            --job=regression-tests
            
      - name: Rollback on Failure
        if: failure()
        run: |
          git fetch --tags
          LAST_STABLE=$(git describe --tags --abbrev=0)
          dbx bundle deploy \
            --target-env pre-release \
            --bundle-file conf/bundle.yml \
            --tag $LAST_STABLE

  production:
    needs: pre-release
    runs-on: ubuntu-latest
    environment: 
      name: production
      url: ${{ steps.prod-deploy.outputs.deployment_url }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Create Release Tag
        run: |
          VERSION=$(date +%Y%m%d)-$(git rev-parse --short HEAD)
          git tag $VERSION
          git push origin $VERSION
          
      - name: Deploy to Production
        id: prod-deploy
        run: |
          dbx bundle deploy \
            --target-env production \
            --bundle-file conf/bundle.yml \
            --storage-path dbfs:/FileStore/shared/production/bundles
            
      - name: Verify Deployment
        run: |
          dbx bundle verify \
            --target-env production \
            --bundle-file conf/bundle.yml
