# DDO Data Platform: Github Feature Development Workflow
# Bi-directional sync (Databricks to Git, Git to Databricks)

name: Feature Development Pipeline

on:
  # Trigger on push to feature branches
  push:
    branches: ['feature/*']
  # Trigger on PR to dev branch
  pull_request:
    branches: [development]
    types: [opened, synchronize, reopened]
  # Trigger on workflow_dispatch for manual sync from Databricks
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Feature branch name'
        required: true
      sync_direction:
        description: 'Sync direction (git-to-dbx or dbx-to-git)'
        required: true
        type: choice
        options: ['git-to-dbx', 'dbx-to-git']

env:
  DBX_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
  DBX_HOST: ${{ secrets.DATABRICKS_HOST }}

jobs:
  sync-workspace:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/feature/') || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install and Configure Databricks CLI  # Only change is here
        run: |
          pip install databricks-cli
          echo "databricks_host ${{ secrets.DATABRICKS_HOST }}" >> ~/.databrickscfg
          echo "databricks_token ${{ secrets.DATABRICKS_TOKEN }}" >> ~/.databrickscfg
          
      - name: Git to Databricks Sync
        if: github.event_name == 'push' || github.event.inputs.sync_direction == 'git-to-dbx'
        run: |
          WORKSPACE_PATH="/Users/${{ github.actor }}/workspace/$(echo $GITHUB_REF_NAME | sed 's/\//_/g')"
          databricks workspace mkdirs $WORKSPACE_PATH
          databricks workspace import_dir ./src $WORKSPACE_PATH --overwrite
          
      - name: Databricks to Git Sync
        if: github.event.inputs.sync_direction == 'dbx-to-git'
        run: |
          WORKSPACE_PATH="/Users/${{ github.actor }}/workspace/${{ github.event.inputs.branch_name }}"
          databricks workspace export_dir $WORKSPACE_PATH ./src --overwrite
          
          git config --global user.name "Databricks Sync"
          git config --global user.email "noreply@databricks.com"
          
          git add .
          git commit -m "Sync from Databricks workspace" || echo "No changes to commit"
          git push origin HEAD

  code-quality:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Run Tests
        run: |
          pip install pytest pytest-cov black isort
          black --check src/
          isort --check src/
          pytest tests/unit --cov=src
          
      - name: Add Team Review
        if: success()
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}
          title: "Feature: ${{ github.head_ref }}"
          body: "Please review these changes"
          team-reviewers: |
            org-name/team-name
